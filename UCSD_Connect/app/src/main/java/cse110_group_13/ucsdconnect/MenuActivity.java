package cse110_group_13.ucsdconnect;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v7.widget.SearchView;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;

/*
 * Class Notes: Based on boilerplate code auto-generated by Android Studio.
 *
 * Description: Central activity for navigating through the menu and handling interactions like
 * viewing event details in various event lists.
 *
 * Public Methods: onBackPressed()
 *                 onCreateOptionsMenu(Menu menu)
 *                 onNavigationItemSelected(MenuItem item)
 *                 onEventInfoRequested(Event event)
 *                 startEventList()
 *                 onCategoryInfoRequested(Category category)
 *
 */

public class MenuActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener,
                   ItemFragment.OnListFragmentInteractionListener,
                   CategoryFragment.OnCategoryListFragmentInteractionListener {

    protected DrawerLayout drawer;

    public SearchListener searchListener = null;

    private static EventFetcher.EventFetchListener listener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_menu);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        /*DrawerLayout*/ drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.setDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        startEventList();
    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu, menu);
        MenuItem item = menu.findItem(R.id.action_search);
        SearchView search = (SearchView) item.getActionView();
        search.setOnQueryTextListener(new SearchView.OnQueryTextListener(){
            @Override
            public boolean onQueryTextSubmit(String text) { return false; }

            @Override
            public boolean onQueryTextChange(String text) {
                if (searchListener != null) {
                    searchListener.onSearchQuery(text);
                }
                return false;
            }
        });
        return true;
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        int id = item.getItemId();

        final Fragment fragment;

        switch (id) {
            case R.id.nav_event_list:
                fragment = ItemFragment.newInstance(new EventFilter.DefaultEvents(User.currentUser.user.getUid()));
                break;
            case R.id.nav_my_events:
                fragment = ItemFragment.newInstance(new EventFilter.CreatedEvents(User.currentUser.user.getUid()));
                break;
            case R.id.nav_planned_events:
                fragment = ItemFragment.newInstance(new EventFilter.PlannedEvents(User.currentUser.user.getUid()));
                break;
            case R.id.nav_blocked_events:
                fragment = ItemFragment.newInstance(new EventFilter.BlockedEvents(User.currentUser.user.getUid()));
                break;
            case R.id.nav_categories:
                fragment = CategoryFragment.newInstance();
                break;
            case R.id.nav_map:
                startActivity(new Intent(this, MapsActivity.class));
                return true;
            case R.id.nav_sign_out:
                LoginActivity.signOut = true;
                startActivity(new Intent(MenuActivity.this, LoginActivity.class));
                return true;
            case R.id.nav_create_event:
                startActivity(new Intent(MenuActivity.this, CreateEventActivity.class));
                return true;
            default:
                return true;
        }

        final FragmentManager fragmentManager = getSupportFragmentManager();
        fragmentManager.beginTransaction().replace(R.id.fragment_content, fragment).addToBackStack("fragment").commit();

        final DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        final NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setCheckedItem(id);
        setTitle(item.getTitle());
        drawer.closeDrawer(GravityCompat.START);

        return true;
    }

    @Override
    public void onEventInfoRequested(Event event) {
        startActivity(EventActivity.createIntent(MenuActivity.this, event));
    }

    /*
     * Starts the event list once logged in
     */
    public void startEventList() {

        final Fragment fragment = ItemFragment.newInstance(new EventFilter.DefaultEvents(User.currentUser.user.getUid()));

        final FragmentManager fragmentManager = getSupportFragmentManager();
        fragmentManager.beginTransaction().replace(R.id.fragment_content, fragment).addToBackStack("fragment").commit();

        final DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        setTitle("Event List");
        drawer.closeDrawer(GravityCompat.START);
    }

    @Override
    public void onCategoryInfoRequested(Category category) {
        final Fragment fragment = ItemFragment.newInstance(new EventFilter.CategoryEvents(category.name));

        final FragmentManager fragmentManager = getSupportFragmentManager();
        fragmentManager.beginTransaction().replace(R.id.fragment_content, fragment).addToBackStack("fragment").commit();

        final DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        setTitle(category.name);
        drawer.closeDrawer(GravityCompat.START);
    }
}
